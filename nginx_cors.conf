proxy_hide_header 'Access-Control-Allow-Origin';
proxy_hide_header 'Access-Control-Allow-Methods';
proxy_hide_header 'Access-Control-Allow-Headers';
proxy_hide_header 'Access-Control-Allow-Credentials';
proxy_hide_header 'Access-Control-Expose-Headers';

add_header 'Access-Control-Allow-Origin' "$http_origin";
add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Length,Content-Type,DNT,If-Modified-Since,Keep-Alive,Location,Origin,Pragma,Range,User-Agent,X-Requested-By,X-Requested-With,X-Pop,X-Host';
add_header 'Access-Control-Allow-Credentials' 'true';
add_header 'Access-Control-Expose-Headers' 'Cache-Control,Content-Language,Content-Type,Content-Length,Expires,Last-Modified,Location,Pragma,X-Pop,X-Host';

if ($request_method = 'OPTIONS') {
  add_header 'Access-Control-Max-Age' 1728000;
  add_header 'Content-Type' 'text/plain charset=UTF-8';
  add_header 'Content-Length' 0;
  return 204;
}

rewrite_by_lua_block {
    local cors = require 'cors'

    cors.init({
        dict_name = "cors_domains",
        redis = {
          master_name = ngx.var.redis_master_name,
          password = ngx.var.redis_password,
          hosts =  ngx.var.redis_hosts,
          port = ngx.var.redis_port
          },
        default_domain = ngx.var.cors_default_domain,
        ttl = 30
    })
    cors.set_header(ngx.var.host)
}
